import socket
import threading

def manejar_cliente(cliente, cliente_id):
    # Recibir tarea específica del cliente
    tarea_recibida = cliente.recv(1024).decode()
    print(f"Proceso {cliente_id} recibió la tarea: {tarea_recibida}")

    # Realizar la parte específica de la tarea
    resultado = realizar_tarea_particular(tarea_recibida)

    # Enviar el resultado al cliente
    cliente.send(resultado.encode())

    # Cerrar la conexión con el cliente
    cliente.close()

def realizar_tarea_particular(tarea):
    # Aquí implementa la lógica específica para cada tarea
    # En este ejemplo, simplemente devolvemos la tarea en mayúsculas
    return tarea.upper()

# Configuración del servidor
host = '127.0.0.1'
puerto = 5555

# Crear el socket del servidor
servidor = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
servidor.bind((host, puerto))
servidor.listen()

print(f"Servidor esperando conexiones en {host}:{puerto}")

# Aceptar conexiones y manejarlas en hilos separados
for i in range(3):
    cliente, direccion = servidor.accept()
    print(f"Conexión establecida desde {direccion}")

    # Crear un hilo para manejar la tarea del cliente
    hilo_cliente = threading.Thread(target=manejar_cliente, args=(cliente, i + 1))
    hilo_cliente.start()

# Cerrar el socket del servidor
servidor.close()
