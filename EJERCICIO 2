import threading
import random
import time

# Meta de la carrera
meta = 10

# Lock para evitar condiciones de carrera al imprimir en la consola
print_lock = threading.Lock()

def corredor(nombre):
    distancia_recorrida = 0
    while distancia_recorrida < meta:
        # Simula un paso aleatorio
        paso = random.randint(1, 3)
        distancia_recorrida += paso

        with print_lock:
            print(f'{nombre} ha recorrido {distancia_recorrida} metros.')

        # Introduce una pequeÃ±a pausa para simular el tiempo entre pasos
        time.sleep(0.5)

    with print_lock:
        print(f'{nombre} ha llegado a la meta!')

# Crear tres hilos para representar a los corredores
hilo_corredor1 = threading.Thread(target=corredor, args=('Corredor 1',))
hilo_corredor2 = threading.Thread(target=corredor, args=('Corredor 2',))
hilo_corredor3 = threading.Thread(target=corredor, args=('Corredor 3',))

# Iniciar los hilos
hilo_corredor1.start()
hilo_corredor2.start()
hilo_corredor3.start()

# Esperar a que al menos uno de los corredores llegue a la meta
hilo_corredor1.join()
hilo_corredor2.join()
hilo_corredor3.join()

print("Carrera finalizada.")
